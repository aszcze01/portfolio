/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { Suspense, useRef } from 'react'
import { OrbitControls, useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import PaletteScene from '../assets/3D/palette.glb'
import { Canvas } from '@react-three/fiber'
import PostProcessingEffects from '../components/Effects'
import { useFrame } from '@react-three/fiber'

type GLTFResult = GLTF & {
  nodes: {
    Model_material0_0: THREE.Mesh
    Model_material1_0: THREE.Mesh
    Model_material2_0: THREE.Mesh
    defaultMaterial002: THREE.Mesh
    defaultMaterial003: THREE.Mesh
    defaultMaterial004: THREE.Mesh
  }
  materials: {}
}

const Palette = (props: JSX.IntrinsicElements['group']) => {
  const { nodes } = useGLTF(PaletteScene) as GLTFResult

  const material = new THREE.MeshStandardMaterial({ color: 0x00ff00, opacity: 0.85, transparent: true })
  const meshRef = useRef<THREE.Mesh>(null!)

  useFrame((_, delta) => (meshRef.current.rotation.y -= delta))

  return (
    <group ref={meshRef} {...props} dispose={null}>
      <group position={[1.393, 0.931, 1.162]} rotation={[-Math.PI / 2, 100, 0]} scale={12.889}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group rotation={[-0.717, 0, 0]} scale={100}>
            <mesh
              geometry={nodes.Model_material0_0.geometry}
              material={material}
            />
            <mesh
              geometry={nodes.Model_material1_0.geometry}
              material={material}
            />
            <mesh
              geometry={nodes.Model_material2_0.geometry}
              material={material}
            />
          </group>
        </group>
      </group>
      <group position={[1.393, 0.931, 1.162]} rotation={[-Math.PI / 2, -0.225, 0]} scale={0.125}>
        <group scale={100}>
          <mesh
            geometry={nodes.defaultMaterial002.geometry}
            material={material}
            position={[-0.198, 0.38, 0.264]}
            rotation={[-0.234, -0.664, -1.826]}
            scale={0.759}
          />
          <mesh
            geometry={nodes.defaultMaterial003.geometry}
            material={material}
            position={[-0.078, 0.503, 0.245]}
            rotation={[-0.878, -0.209, -0.264]}
            scale={0.564}
          />
          <mesh
            geometry={nodes.defaultMaterial004.geometry}
            material={material}
            position={[-0.367, 0.24, 0.344]}
            rotation={[0.29, -0.851, -2.016]}
            scale={0.842}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload(PaletteScene)

export default () => (
    <Canvas
        orthographic
        // shadows
        camera={{
            position: [0, 0, 100],
        }}
    >
        <OrbitControls
        enableZoom={false}
        minPolarAngle={Math.PI / 2}
        maxPolarAngle={Math.PI / 2}
        />
        <ambientLight intensity={0.5} />
        <directionalLight position={[0, 0, 10]} intensity={0.9} />
        <directionalLight position={[0, 0, -10]} intensity={0.9} />
        <PostProcessingEffects />
        <Suspense fallback={null}>
            <mesh scale={6}>
                <Palette />
            </mesh>
        </Suspense>
    </Canvas>
  );
