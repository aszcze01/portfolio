/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Animation.rig (K: BlackHorn) (https://sketchfab.com/black.horn_860)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/imac-g3-upgraded-6b5974d30eb640d294f86c9ad43443e4
Title: Imac G3 - Upgraded
*/

import * as THREE from 'three'
import { OrbitControls, useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import MacScene from '../assets/3D/monitor_mac-transformed.glb'
import { Canvas, useFrame } from '@react-three/fiber'
import PostProcessingEffects from '../components/Effects'
import { Suspense, useRef } from 'react'

type GLTFResult = GLTF & {
  nodes: {
    Object_15: THREE.Mesh
  }
  materials: {}
}

const IMac = (props: JSX.IntrinsicElements['group']) => {

  const { nodes } = useGLTF(MacScene) as GLTFResult

  const material = new THREE.MeshStandardMaterial({ color: 0x00ff00, opacity: 0.85, transparent: true })

  const group = useRef<THREE.Group>(null!)

  useFrame((_, delta) => (group.current.rotation.y += delta))

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.Object_15.geometry} material={material} position={[-1.724, 4.642, -0.045]} />
    </group>
  )
}

useGLTF.preload(MacScene)

export default () => (
    <Canvas
        orthographic
        camera={{
        position: [0, 0, 500],
        }}
    >
        <OrbitControls
        enableZoom={false}
        minPolarAngle={Math.PI / 2}
        maxPolarAngle={Math.PI / 2}
        />
        <ambientLight intensity={0.5} />
        <directionalLight position={[0, 0, 10]} intensity={0.9} />
        <directionalLight position={[0, 0, -10]} intensity={0.9} />
        <PostProcessingEffects />
        <Suspense fallback={null}>
            <mesh scale={5} position={[0, -20, 0]}>
                <IMac />
            </mesh>
        </Suspense>
    </Canvas>
  );
