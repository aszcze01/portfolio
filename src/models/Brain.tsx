/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { Suspense, useRef } from 'react'
import { OrbitControls, useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import BrainScene from '../assets/3D/brain-low2.glb'
import { Canvas, useFrame } from '@react-three/fiber'
import PostProcessingEffects from '../components/Effects'
import { Ring } from './Ring'

type GLTFResult = GLTF & {
  nodes: {
    cerebellum: THREE.Mesh
    brainstem: THREE.Mesh
    rightHemisphere: THREE.Mesh
    leftHemisphere: THREE.Mesh
  }
  materials: {}
}

const Brain = (props: JSX.IntrinsicElements['group']) => {

  const group = useRef<THREE.Group>(null!)
  const cerebellum = useRef<THREE.Mesh>(null!)

  const { nodes } = useGLTF(BrainScene) as GLTFResult

  const material = new THREE.MeshStandardMaterial({ color: 0x00ff00, opacity: 0.85, transparent: true })

  useFrame((_, delta) => (group.current.rotation.y += delta))

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        ref={cerebellum}
        geometry={nodes.cerebellum.geometry}
        material={material}
        position={[0, 0, -0.064]}
        rotation={[1.584, 0, 0]}
        scale={3.586}
      />
      <mesh
        geometry={nodes.brainstem.geometry}
        material={material}
        position={[0, 0, -0.064]}
        rotation={[1.584, 0, 0]}
        scale={3.586}
      />
      <mesh
        geometry={nodes.rightHemisphere.geometry}
        material={material}
        position={[0, 0, -0.064]}
        rotation={[1.584, 0, 0]}
        scale={3.586}
      />
      <mesh
        geometry={nodes.leftHemisphere.geometry}
        material={material}
        position={[0, 0, -0.064]}
        rotation={[1.584, 0, 0]}
        scale={3.586}
      />
    </group>
  )
}

useGLTF.preload(BrainScene)


export default () => (
  <Canvas
      orthographic
      camera={{
          position: [0, 0, 300],
      }}
  >
      <OrbitControls
      enableZoom={false}
      minPolarAngle={Math.PI / 2}
      maxPolarAngle={Math.PI / 2}
      />
      <ambientLight intensity={0.5} />
      <directionalLight position={[0, 0, 10]} intensity={0.9} />
      <directionalLight position={[0, 0, -10]} intensity={0.9} />
      <PostProcessingEffects />
      <Suspense fallback={null}>

        <Ring rotation={[Math.PI / 2, 0, 0]} />
        <Ring rotation={[0, Math.PI / 2, 0]} />
        <Ring rotation={[0, 0, Math.PI / 2]} />

          <mesh scale={600} position={[0, -50, 0]}>
              <Brain />
          </mesh>
      </Suspense>
  </Canvas>
);
