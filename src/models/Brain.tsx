/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Versal (https://sketchfab.com/versal)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/brain-areas-d64608a3978b47d8a39c5a15795ca8c4
Title: Brain Areas
*/

import { useRef, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame, useThree } from '@react-three/fiber'
import BrainScene from '../assets/3D/brain_areas.glb'
import { a } from '@react-spring/three'
import * as THREE from 'three'
// import HolographicMaterial from '../materials/HolographicMaterial';

/**
 * @function Brain
 * @description A THREE.js React component for a 3D model of a brain, using
 *              Three.js' GLTFLoader and react-spring's useSprings hook for
 *              animation.
 * @param {Object} props The props to pass to the component. Should include
 *                        the following keys:
 *                          - `position`: A THREE.Vector3 representing the
 *                            position to place the brain model in the scene.
 *                          - `rotation`: A THREE.Euler representing the
 *                            rotation of the brain model in the scene.
 * @returns {JSX.Element} The rendered React component.
 */
export const Brain = (
  props: {
    position: THREE.Vector3;
    rotation: THREE.Euler;
  }): JSX.Element => {
  const { nodes, materials } = useGLTF(BrainScene)
  return (
    <group {...props} ref>
      <mesh
      castShadow
      receiveShadow
        geometry={nodes.Brain_Part_01_BRAIN_TEXTURE_blinn2_0.geometry}
        material={materials.BRAIN_TEXTURE_blinn2 as THREE.MeshLambertMaterial}
      />
      <mesh
      castShadow
        receiveShadow
        geometry={nodes.Brain_Part_02_BRAIN_TEXTURE_blinn2_0.geometry}
        material={materials.BRAIN_TEXTURE_blinn2 as THREE.MeshLambertMaterial}
      />
      <mesh
      castShadow
        receiveShadow
        geometry={nodes.Brain_Part_03_BRAIN_TEXTURE_blinn2_0.geometry}
        material={materials.BRAIN_TEXTURE_blinn2 as THREE.MeshLambertMaterial}
      />
      <mesh
      castShadow
        receiveShadow
        geometry={nodes.Brain_Part_04_BRAIN_TEXTURE_blinn2_0.geometry}
        material={materials.BRAIN_TEXTURE_blinn2 as THREE.MeshLambertMaterial}
      />
      <mesh
      castShadow
        receiveShadow
        geometry={nodes.Brain_Part_05_BRAIN_TEXTURE_blinn2_0.geometry}
        material={materials.BRAIN_TEXTURE_blinn2 as THREE.MeshLambertMaterial}
      />
      <mesh
      castShadow
        receiveShadow
        geometry={nodes.Brain_Part_06_BRAIN_TEXTURE_blinn2_0.geometry}
        material={materials.BRAIN_TEXTURE_blinn2 as THREE.MeshLambertMaterial}
      />
    </group>
  )
}

useGLTF.preload(BrainScene)
